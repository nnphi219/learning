# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

variables:
  BuildConfiguration: 'Release'

jobs:

  - job: 'net_core'
    displayName: '.NET Core Build'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: UseDotNet@2
        displayName: 'Install .net core 3.1'
        inputs:
          packageType: 'sdk'
          version: '3.1.100'

      - task: DotNetCoreCLI@2
        displayName: '.NET Core - Restore'
        inputs:
          command: 'restore'
          projects: './src'
          feedsToUse: 'select'

      - task: DotNetCoreCLI@2
        displayName: '.NET Core - Build'
        inputs:
          command: 'build'
          arguments: '-c $(BuildConfiguration) --no-restore'
          projects: './src'

      - task: DotNetCoreCLI@2
        displayName: '.NET Core - Run Tests'
        inputs:
          command: 'test'
          projects: './src'
        
      - task: DotNetCoreCLI@2
        displayName: 'Publish - API'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/JPProject.Admin.Api.csproj'
          arguments: '-c $(BuildConfiguration) -o $(Build.StagingDirectory)/api --no-build'
          zipAfterPublish: false
          modifyOutputPath: false
          workingDirectory: './src/Backend/JPProject.Admin.Api'
 
      - task: ArchiveFiles@2
        displayName: 'Zip - API'
        inputs:
          rootFolderOrFile: '$(Build.StagingDirectory)/api/'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/jpproject.api.$(Build.BuildNumber).zip'
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        displayName: 'Artifact - Generate API'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/jpproject.api.$(Build.BuildNumber).zip'
          ArtifactName: 'jpproject.api.$(Build.BuildNumber)'
          publishLocation: 'Container'

  # Angular APP
  - job: 'angular'
    displayName: 'Angular Build'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      # Admin UI
      - task: Npm@1
        displayName: 'NPM - Install - AdminUI'
        inputs:
          command: install
          workingDir: src/Frontend/Jp.AdminUI

      - task: Npm@1
        displayName: 'NPM - Test - AdminUI'
        inputs:
          command: custom
          customCommand: 'run test -- --watch=false --code-coverage'
          workingDir: src/Frontend/Jp.AdminUI

      # - task: Npm@1
      #   displayName: 'NPM - E2E - AdminUI'
      #   inputs:
      #     command: custom
      #     customCommand: 'run e2e'
      #     workingDir: src/Frontend/Jp.AdminUI 

      - task: Npm@1
        displayName: 'NPM - Build Prod - AdminUI'
        inputs:
          command: custom
          customCommand: 'run build'
          workingDir: src/Frontend/Jp.AdminUI

      - task: ArchiveFiles@2
        displayName: 'ZIP - AdminUI'
        inputs:
          rootFolderOrFile: 'src/Frontend/Jp.AdminUI/dist/'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/jpproject.admin-ui.$(Build.BuildNumber).zip'
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        displayName: 'Artifact - Generate - AdminUI'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/jpproject.admin-ui.$(Build.BuildNumber).zip'
          ArtifactName: 'jpproject.admin-ui.$(Build.BuildNumber)'
          publishLocation: 'Container'

      - task: PublishCodeCoverageResults@1
        displayName: 'Publish code coverage Angular results'
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: './src/Frontend/Jp.AdminUI/coverage/cobertura-coverage.xml'
          reportDirectory: './src/Frontend/Jp.AdminUI/coverage/'


      - task: PublishTestResults@2
        displayName: 'Publish Angular test results'
        inputs:
          testRunTitle: Angular
          testResultsFormat: JUnit
          testResultsFiles: "**/TESTS*.xml"

      - task: PublishTestResults@2
        displayName: 'Publish Angular E2E test results'
        inputs:
          testRunTitle: Angular_E2E
          testResultsFormat: JUnit
          testResultsFiles: "**/junit*.xml"            
