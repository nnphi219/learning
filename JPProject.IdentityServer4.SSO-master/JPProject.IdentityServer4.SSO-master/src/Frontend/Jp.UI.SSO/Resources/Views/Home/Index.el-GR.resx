<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Body-Click" xml:space="preserve">
    <value>Κλικ</value>
  </data>
  <data name="Body-Demo" xml:space="preserve">
    <value>Επιλέξτε demo</value>
  </data>
  <data name="Body-Document" xml:space="preserve">
    <value>Ο IdentityServer δημοσιεύει ένα &lt;a href="~/.well-known/openid-configuration"&gt;έγγραφο εντοπισμού&lt;/a&gt; όπου μπορείτε να βρείτε πληροφορίες και συνδέσμους για όλα τα endpoints, κλειδιά κλπ.</value>
  </data>
  <data name="Body-Here" xml:space="preserve">
    <value>εδώ</value>
  </data>
  <data name="Body-HimselfData" xml:space="preserve">
    <value>είναι ένα περιβάλλον χρήστη για τη διαχείριση δεδομένων χρηστών. Μπορείτε να αλλάξετε το προφίλ σας, να ενημερώσετε τον κωδικό πρόσβασης κλπ.</value>
  </data>
  <data name="Body-IS4-Main-Goal" xml:space="preserve">
    <value>Ο κύριος στόχος του Jp Project είναι να παράσχει ένα</value>
  </data>
  <data name="Body-Jp-Description" xml:space="preserve">
    <value>&lt;h1 class="mb-3 text-sm-nowrap"&gt;Jp Project&lt;/h1&gt;
&lt;h2 class="mb-3 text-sm-nowrap"&gt;Δωρεάν περιβάλλον διαχείρισης του IdentityServer 4&lt;/h2&gt;
&lt;p class="lead"&gt;
    Το μόνο περιβάλλον διοχείρισης που χρειάζεστε για να &lt;strong&gt;δημιουργήσετε λύση Καθολικής Σύνδεσης&lt;/strong&gt;.
&lt;/p&gt;
&lt;p class="lead mb-4"&gt;
    Το Jp Project είναι ένα προϊόν ανοικτού λογισμικού. Δημιουργήθηκε με την χρήση των Bootstrap 4, Angular 8 και .Net Core 3.1.
&lt;/p&gt;
&lt;div class="d-flex flex-column flex-md-row lead mb-3"&gt;
    &lt;a href="#live-preview" class="btn btn-lg btn-outline-light mb-3 mb-md-0 mr-md-3"&gt;Δωρεάν προεπισκόπηση&lt;/a&gt;
    &lt;a href="https://github.com/brunohbrito/JP-Project" class="btn btn-lg btn-outline-light mb-3 mb-md-0 mr-md-3"&gt;Κατεβάστε το Jp Project&lt;/a&gt;
&lt;/div&gt;
&lt;div class="version text-small mt-3"&gt;
    Έκδοση βιβλιοθήκης: &lt;strong&gt;1.1&lt;/strong&gt; · Έκδοση προτύπου διαχειριστικού περιβάλλοντος: &lt;strong&gt;1.1&lt;/strong&gt;
&lt;/div&gt;</value>
  </data>
  <data name="Body-Manage" xml:space="preserve">
    <value>για να διαχειριστείτε τις αποθηκευμένες εξουσιοδοτήσεις σας.</value>
  </data>
  <data name="Body-ManageServer" xml:space="preserve">
    <value>για τη διαχείριση του Server.</value>
  </data>
  <data name="Body-RichUI" xml:space="preserve">
    <value>για να διαχειριστείτε τον Identity Server 4. Ένα πλούσιο περιβάλλον χρήστη Angular 8.</value>
  </data>
  <data name="Body-SSO" xml:space="preserve">
    <value>Καθολικη Συνδεση</value>
  </data>
  <data name="Body-UIAngular7" xml:space="preserve">
    <value>Πλούσιο περιβάλλον χρήστη σε πρότυπο Core UI Angular 8.</value>
  </data>
  <data name="Body-User-Interface" xml:space="preserve">
    <value>Διαχειριστικό Περιβάλλον</value>
  </data>
  <data name="Body-UserManagement" xml:space="preserve">
    <value>Διαχειριση χρηστων</value>
  </data>
  <data name="Body-Welcome" xml:space="preserve">
    <value>&lt;h1 class="display-4"&gt;Καλώς ήλθατε!&lt;/h1&gt;
&lt;p class="lead"&gt;Το Jp Project αποτελείτε από 3 εφαρμογές Web: Server Καθολικής Σύνδεσης, Περιβάλλον Διαχείρισης Χρηστών and εφαρμογή Διαχειριστή για τον ID4.&lt;/p&gt;
&lt;hr class="my-4"&gt;
&lt;p&gt;Προσπελάστε παρακάτω κάθε μία από τις εφαρμογές.&lt;/p&gt;
&lt;p&gt;
    Εδώ είναι οι σύνδεσμοι στο
    &lt;a class="text-white-50" href="https://github.com/brunohbrito/JP-Project"&gt;αποθετήριο πηγαίου κώδικα&lt;/a&gt;,
    και στην &lt;a class="text-white-50" href="https://jp-project.readthedocs.io/en/latest/index.html"&gt;τεχνική τεκμηρίωση για περισσότερες πληροφορίες&lt;/a&gt;.
&lt;/p&gt;</value>
  </data>
  <data name="Menu-Home" xml:space="preserve">
    <value>Αρχική</value>
  </data>
  <data name="Menu-User" xml:space="preserve">
    <value>Χρήστης</value>
  </data>
</root>